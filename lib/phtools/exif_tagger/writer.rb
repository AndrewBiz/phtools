#!/usr/bin/env ruby
# encoding: UTF-8
# (c) ANB Andrew Bizyaev

require 'date'

# Exif tagger
module ExifTagger
  # batch EXIF tags setter
  class Writer
    DEFAULT_OPTIONS = %w(-v0 -FileModifyDate<DateTimeOriginal -overwrite_original -ignoreMinorErrors)
    attr_reader :script_name, :added_files_count

    def initialize(script_name: 'exif_tagger.txt',
                   memo: 'Generated by ftools',
                   output: STDOUT, err: STDERR)
      @script_name = script_name
      create_script(memo)
      @added_files_count = 0
      @output = output
      @err = err
      @output.puts "*** Preparing exiftool script '#{@script_name}' ..."
    end

    def add_to_script(ftfile: '', tags: {}, options: DEFAULT_OPTIONS)
      @script.puts "# **(#{@added_files_count + 1})** Processing file: #{ftfile} *****"
      # tags
      tags.each do |k|
        @script.puts tags.item(k).to_write_script
      end
      # file to be altered
      @script.puts %Q{#{ftfile}}
      # General options
      options.each { |o| @script.puts "#{o}" }
      @script.puts %Q{-execute}
      @script.puts
      @added_files_count += 1

    rescue => e
      raise WriteTag, "adding item to exiftool script - #{e.message}"
    end

    def close_script
      @script.close
      @output.puts "*** Finished preparation of the script '#{script_name}'"
    rescue => e
      raise WriteTag, "closing exiftool script - #{e.message}"
    end

    def command
      "exiftool -@ #{@script_name}"
    end

    def run!
      close_script
      if @added_files_count > 0
        @output.puts "*** Running #{command} ..."
        ok = system(command, out: @output, err: @err)
        fail if ok.nil?
        @output.puts "*** Finished #{command}"
      else
        @output.puts "*** Nothing to update, skip running #{command} ..."
      end
    rescue => e
      raise WriteTag, "running #{command}"
    end

    private

    def create_script(memo)
      @script = File.open(@script_name, 'w+:utf-8')
      @script.puts '# exiftool script for batch tag operations'
      @script.puts "# #{memo}"
      @script.puts "# usage: exiftool -@ #{@script_name}"
    rescue => e
      raise ExifTagger::WriteTag, "creating exiftool script - #{e.message}"
    end
  end
end
